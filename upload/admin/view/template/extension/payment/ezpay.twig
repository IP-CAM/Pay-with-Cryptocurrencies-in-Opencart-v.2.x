{{ header }} {{ column_left }}

<div id="content">
    <form action="{{ action }}" class="form-horizontal" method="POST" id="ezpay-form-config" data-url_validate_wallet="{{ url_validate_wallet }}">
        <div class="page-header">
            <div class="container-fluid">
                <div class="pull-right">
                    <button type="submit" data-toggle="tooltip" title="{{ button_save }}" class="btn btn-primary" form="ezpay-form-config"><i class="fa fa-save"></i></button>
                    <a href="{{ action.cancel }}" data-toggle="tooltip" title="{{ button_cancel }}" class="btn btn-default"><i class="fa fa-reply"></i></a>
                </div>
                    <h1>{{ heading_title }}</h1>
                <ul class="breadcrumb">
                    {% for breadcrumb in breadcrumbs %}
    {#                    <li><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>#}
                    {% endfor %}
                </ul>
            </div>
        </div>
        <div class="container-fluid">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title"><i class="fa fa-pencil"></i> Edit EzPay </h3>
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        <label class="control-label col-md-3" for="enable">Enable ezPay</label>
                        <div class="col-sm-9">
                            <input type="checkbox" id="enable" class="form-control" name="enable">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-3" for="gateway-api-url"> GATEWAY API URL </label>
                        <div class="col-md-9">
                            <input type="text" id="gateway-api-url" class="form-control" name="payment_ezpay_gateway_api_url" value="{{ payment_ezpay_gateway_api_url }}">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-3" for="gateway-api-url"> API KEY </label>
                        <div class="col-md-9">
                            <input type="text" id="api-key" class="form-control col-md-9" name="payment_ezpay_api_key" value="{{ payment_ezpay_api_key }}">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-3" for="order-status"> ORDER STATUS </label>
                        <div class="col-md-9">
                            <input type="text" id="order-status" class="form-control col-md-9" name="payment_ezpay_order_status" value="{{ payment_ezpay_order_status }}">
                        </div>
                    </div>
                </div>
                <div class="panel-heading">
                    <h3 class="panel-title"><i class="fa fa-pencil"></i> Edit EzPay </h3>
                </div>
                <div class="panel-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th></th>
                                <th></th>
                                <th>Name</th>
                                <th>Full Name</th>
                                <th>Discount</th>
                                <th>Payment Lifetime</th>
                                <th>Wallet Address</th>
                                <th>safe block distant</th>
                            </tr>
                        </thead>
                        <tbody id="coin-config__table">
                        {% for coin_config in coins_config %}
                            <tr>
                                <td class="sortable-handle">move
                                    <input type="hidden" class="coin-config__order" name="{{coin_config.ezpay_coin_id}}[coin-order]" value="{{ coin_config.order }}">
                                    <input type="hidden" class="coin-config__id" name="{{coin_config.ezpay_coin_id}}[coin-id]" value="{{coin_config.ezpay_coin_id}}">
                                </td>
                                <td>
                                    <img src="{{ coin_config.logo }}" alt="">
                                </td>
                                <td>{{coin_config.name}}</td>
                                <td>{{coin_config.full_name}}</td>
                                <td>{{ coin_config.discount }}%</td>
                                <td>{{ coin_config.payment_lifetime }}</td>
                                <td>{{ coin_config.wallet_address }}</td>
                                <td>{{ coin_config.safe_block_distant }}</td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                    <button id="btn-add" class="btn btn-primary" form="" data-list_coin_url="{{ url_get_coin }}">
                        thÃªm
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>

<script>
$( function() {
    const selectors = {
        formConfig: '#ezpay-form-config',
        selectCoinConfig: '.ezpay-select-coin',
        coinConfigTable: '#coin-config__table',
        cloneRowCoinConfig: '.coin-config-clone',
        btnAdd: '#btn-add',
        btnDelete: '.btn-delete',
        btnEdit: '.btn-edit',
        btnCancel: '.btn-cancel',
        gatewayApiUrlInput: "#gateway-api-url",
        apiKeyInput: "#api-key",
        orderStatusInput: "#order-status",
        coinIdInput: '.coin-config__id',
        coinOrderInput: '.coin-config__order',
        coinSymbolInput: '.coin-config__fullname',
        coinNameInput: '.coin-config__name',
        coinDiscountInput: '.coin-config__discount',
        coinPaymentLifetimeInput: '.coin-config__payment-lifetime',
        coinWalletAddressInput: '.coin-config__wallet-address',
        coinSafeBlockDistantInput: '.coin-config__safe-block-distant',
    };

    var oc_ezpay_admin = function() {
        $(selectors.btnAdd).click(this.addCoinConfigListener.bind(this));
        this.initSortable();
        this.initValidate();
    }

    oc_ezpay_admin.prototype.initValidate = function() {
        $.validator.addMethod("integer", function(value, element) {
            return this.optional( element ) || Math.floor(value) == value && $.isNumeric(value);
        }, "This field should be integer");
        $( selectors.formConfig ).validate({
            submitHandler: function(form) {
                form.submit();
            }
        });

        this.validateAllInput(selectors.gatewayApiUrlInput, {required: true});
        this.validateAllInput(selectors.apiKeyInput, {required: true});
        this.validateAllInput(selectors.orderStatusInput, {required: true});
        this.validateAllInput(selectors.coinDiscountInput, {max: 100, integer: true});
        this.validateAllInput(selectors.coinNameInput, {required: true});
        this.validateAllInput(selectors.coinIdInput, {required: true});
        this.validateAllInput(selectors.coinOrderInput, {required: true});
        this.validateAllInput(selectors.coinSymbolInput, {required: true});
        this.validateAllInput(selectors.coinPaymentLifetimeInput, {integer: true});
        this.validateAllInput(selectors.coinSafeBlockDistantInput, {integer: true});

        this.validateWalletAddress();
    }

    oc_ezpay_admin.prototype.validateWalletAddress = function() {
        $(selectors.coinWalletAddressInput).each(function () {
            var inputName = $(this).attr('name');
            $(`input[name="${inputName}"]`).rules('add', {
                required: true,
                remote: {
                    url: $(selectors.formConfig).data('url_validate_wallet'),
                    data: {
                        address: function () {
                            return $(`input[name="${inputName}"]`).val();
                        },
                    },
                },
                messages: {
                    remote: "This wallet address is invalid"
                }
            });
        });
    }

    oc_ezpay_admin.prototype.validateAllInput = function(selector, rules) {
        $(selector).each(function () {
            var inputName = $(this).attr('name');
            $(`input[name="${inputName}"]`).rules('add', rules);
        });
    }

    oc_ezpay_admin.prototype.addCoinConfigListener = function() {
        var url = $(selectors.btnAdd).data('list_coin_url');
        var container = `<tr class="${this.formatSelectorToClassName(selectors.cloneRowCoinConfig)}">
                <td class="sortable-handle">move
                </td>
                <td>
                    <select class="${this.formatSelectorToClassName(selectors.selectCoinConfig)}" style="width: 300px" data-list_coin_url="${url}"></select>
                </td>
                <td></td>
                <td></td>
                <td>
                    <div class="col-sm-10"><input type="text" class="form-control"></div>
                </td>
                <td><input type="text" class="form-control"></td>
                <td><input type="text" class="form-control"></td>
                <td><input type="text" class="form-control"></td>
            </tr>`
        $(selectors.coinConfigTable).append(container);

        this.initSelectCoinConfig();
        $(selectors.selectCoinConfig).on('select2:select', this.selectCoinListener.bind(this));
    }

    oc_ezpay_admin.prototype.initSelectCoinConfig = function() {
        var that = this;
        $(".ezpay-select-coin").select2({
            ajax: {
                url: $(selectors.selectCoinConfig).data('list_coin_url'),
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        keyword: params.term, // search term
                        page: params.page
                    };
                },
                processResults: function (data, params) {
                    params.page = params.page || 1;

                    return {
                        results: data.data
                    };
                },
                cache: true
            },
            placeholder: 'Search for a repository',
            minimumInputLength: 1,
            templateResult: that.formatRepo,
        });
    }

    oc_ezpay_admin.prototype.selectCoinListener = function (e) {
        var data = e.params.data;
        var order = !$( selectors.coinConfigTable + ' input[name="coin-order"]').last().val() ? 0 : parseInt($(selectors.coinConfigTable +' input[name="coin-order"]').last().val()) + 1;
        var duplicate = false;

        $(selectors.coinIdInput).each(function () {
            if($(this).val() === data.id) {
                duplicate = true;
            }
        });

        if(!duplicate) {
            var container = `<tr>
                <td class="sortable-handle">move
                    <input type="hidden" class="${this.formatSelectorToClassName(selectors.coinOrderInput)}" name="${data.id}[coin-order]" value="${order}">
                    <input type="hidden" class="${this.formatSelectorToClassName(selectors.coinIdInput)}" name="${data.id}[coin-id]" value="${data.id}">
                </td>
                <td>
                    <img src="${data.logo}" alt="">
                    <input type="hidden" value="${data.logo}" name="${data.id}[coin-logo]">
                </td>
                <td>${data.symbol} <input type="hidden" class="${this.formatSelectorToClassName(selectors.coinSymbolInput)}" value="${data.symbol}" name="${data.id}[coin-symbol]"></td>
                <td>${data.name} <input type="hidden" class="${this.formatSelectorToClassName(selectors.coinNameInput)}" value="${data.name}" name="${data.id}[coin-name]"> </td>
                <td>
                    <div class="row">
                        <div class="col-sm-10"><input type="text" class="form-control ${this.formatSelectorToClassName(selectors.coinDiscountInput)}" name="${data.id}[coin-discount]"></div>
                        <div class="col-sm-2 text-left"></div>
                    </div>
                </td>
                <td><input type="text" class="form-control ${this.formatSelectorToClassName(selectors.coinPaymentLifetimeInput)}" name="${data.id}[coin-payment-life-time]"></td>
                <td><input type="text" class="form-control ${this.formatSelectorToClassName(selectors.coinWalletAddressInput)}" name="${data.id}[coin-wallet-address]"></td>
                <td><input type="text" class="form-control ${this.formatSelectorToClassName(selectors.coinSafeBlockDistantInput)}" name="${data.id}[coin-safe-block-distant]"></td>
            </tr>`
            $(selectors.coinConfigTable).append(container);
            $(selectors.cloneRowCoinConfig).remove();

            this.initValidate();
            this.updateCoinConfigOrder();
        }
    }

    oc_ezpay_admin.prototype.formatRepo = function(repo) {
        var container = $(
            `<div class='select2-result-repository clearfix select-coin-box' id="${repo.id}">
                <div class='select2-result-repository__meta'>
                    <div class="row">
                        <div class="col-sm-3">
                            <img src="${repo.logo}" alt="" style="width:100%">
                        </div>
                        <div class='select2-result-repository__title col-lg-9 text-justify' style="padding-top: 12px">${repo.name}</div>
                    </div>
                </div>
            </div>`
        );
        return container;
    }

    oc_ezpay_admin.prototype.initSortable= function() {
        var that = this;
        $( selectors.coinConfigTable ).sortable({
            handle: '.sortable-handle',
            stop: function(event, ui) {
                that.updateCoinConfigOrder();
            }
        });
    }

    oc_ezpay_admin.prototype.updateCoinConfigOrder = function () {
        $(selectors.coinOrderInput).each(function(order) {
            $(this).val(order);
        })
    }

    oc_ezpay_admin.prototype.formatSelectorToClassName = function(selector) {
        return selector.slice(1, selectors.length);
    }

    new oc_ezpay_admin();
});
</script>

{{ footer }}